package com.vf.security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;


@EnableGlobalMethodSecurity(prePostEnabled = true)
@Configuration
public class SecurityWeb {
	
	@Autowired
	ClienteDetailsService userDetailsService;
	
	@Bean
	public SecurityFilterChain filterChain (HttpSecurity http) throws Exception {
		
		http
				.httpBasic()
				.and()
				.authorizeHttpRequests()
				//.antMachers(HttpMethod.POST,"vf/cliente").permitAll()
				//.antMachers(HttpMethod.GET,"vf/cliente/**").hasRole("ADMIN")
				//.antMachers(HttpMethod.GET,"vf/cliente/**").hasRole("ADMIN")
				.anyRequest().authenticated()
				.and()
				.csrf().disable();
				
		return http.build();
    }
	
	@Bean
	public PasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
		
	}
	
}
